apply plugin: 'com.android.library'

android {
    compileSdkVersion 33
    defaultConfig {
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                abiFilters 'armeabi-v7a', 'arm64-v8a'
                arguments "-DANDROID_TOOLCHAIN=clang", "-DANDROID_STL=c++_shared", "-DCMAKE_VERBOSE_MAKEFILE=ON"
                cppFlags '-Wl,--gc-sections -fno-exceptions -fno-rtti -fvisibility=hidden'
            }
        }
    }

//    externalNativeBuild {
//        cmake {
//            path "src/main/cpp/CMakeLists.txt"
//            version "3.10.2"
//        }
//    }
    // 大多数打包过程不需要编译这个项目的native代码，所以预编译一个so。当手动修完，需要编译的时候，可以注释掉
    // 下面的配置，取消注释externalNativeBuild，编译，生成新的so。
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            jniLibs.srcDir('libs')
            jni.srcDirs = []
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    //implementation 'androidx.appcompat:appcompat:1.2.0'
    //implementation 'com.google.android.material:material:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(path: ':library:xin-apm:xin-base')
}